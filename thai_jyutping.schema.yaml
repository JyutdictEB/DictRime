# Rime schema
# encoding: utf-8
#‡πÄ‡∏≠‡∏≠ vs ‡πÄ‡∏≠‡πá‡∏≠
# X‚Äì‡πà..., X‚Äì‡πá: X gonq

schema:
  schema_id: Thai_Jyutping
  name: Ê≥∞Á≤µÊãº
  version: "2.1"
  author:
    - Khuy
  description: |
    Âü∫‰∫éÈ¶ôÊ∏ØË™ûË®ÄÂ≠∏ÊúÉÁ≤µË™ûÊãºÈü≥ÊñπÊ°à

switches:
  - name: ascii_mode
    reset: 0
    states: [ ‡πÑ‡∏ó‡∏¢, ‡∏ù‡∏£‡∏±‡πà‡∏á ]
  - name: full_shape
    states: [ half, full ]
  - name: simplification
    states: [ ‡∏à‡∏µ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏ï‡πá‡∏°, ‡∏à‡∏µ‡∏ô‡∏ï‡∏±‡∏ß‡∏¢‡πà‡∏≠ ]
  - name: ascii_punct
    states: [ „ÄÇÔºå, ÔºéÔºå ]
  - name: zh_hk                
    states: [ ‡πÑ‡∏ï‡πâ‡∏´‡∏ß‡∏±‡∏ô, ‡∏Æ‡πà‡∏≠‡∏á‡∏Å‡∏á]             
    reset: 1                      #ÈªòËÆ§ÂºÄÂêØ
  - name: emoji_cn                #EmojiÂºÄÂÖ≥
    states: [ „Äá, üòä]             #ÊòæÁ§∫Âú®Áä∂ÊÄÅÊ†èÁöÑÂõæÊ†á
    reset: 0                      #ÈªòËÆ§ÂÖ≥Èó≠

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator
    - reverse_lookup_translator
  filters:
    - simplifier@emoji_cn         #EmojiÊª§Èïú       
    - simplifier
    - simplifier@zh_hk  
    - uniquifier

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcbaQWERTYUIOPASDFGHJKLZXCVBNM
  delimiter: " '"
  algebra:
    - xform/([ptkh])(10)/$1,/
    - "xform/([0-9,])h/$1/" 
    - xform/v(\S*[0-9,])/w$1/ #gs
    - xform/bb(\S*[0-9,])/M$1/ #gs
    - xform/dd(\S*[0-9,])/N$1/ #gs
    - xform/oo(\S*[0-9,])/O$1/ #gs
    - xform/ee(\S*[0-9,])/e$1/ #gs
    - xform/yu(\S*[0-9,])/y$1/ #fw
    - xform/o([mp])(\S*[0-9,])/OG$1$2/ #fw, <…µ> (as in Jing'waa) or OG (short, *o)
    - xform/ou(\S*[0-9,])/O$1/ #fw, <…µ> (as in Jing'waa) or <…µ>u or O (long, *…íw)
    - xform/eo(\S*[0-9,])/<…µ>$1/ #fw, < ä> (as in Jing'waa) or <…µ>
    - xform/oe(\S*[0-9,])/<≈ì>$1/ #fw
    - xform/e(\S*[0-9,])/<Œµ>$1/ #fw
    - xform/<…µ>(\S*[0-9,])/eo$1/ #fw
    - xform/<≈ì>(\S*[0-9,])/oe$1/ #fw
    - xform/([zcs])i([0-9,])/$1<…Ø>$2/ #fw
    - xform/<…Ø>([0-9,])/Y$1/ #fw
    - xform/zh(\S+[0-9,])/Rd$1/ #fw
    - xform/ch(\S+[0-9,])/Rt$1/ #fw
    - xform/sh(\S+[0-9,])/SR$1/ #fw
    - xform/nj(\S*[0-9,])/J$1/
    - xform/ng(\S*[0-9,])/v$1/
    - xform/(b\S+)4/$1<‡πñ>/ #hz
    - xform/(d\S+)4/$1<‡πñ>/ #hz
    - xform/(g\S+)4/$1<‡πñ>/ #hz
    - xform/(z\S+)4/$1<‡πñ>/ #hz
    - xform/sl(\S+[0-9,])/<…¨>$1/ #hz
    - xform/<‡πñ>/6/ #regex rime
    - xform/p(\S+[4569,])/P$1/
    - xform/f(\S+[4569,])/F$1/
    - xform/t(\S+[4569,])/T$1/
    - xform/Rt(\S+[4569,])/RT$1/ #fw
    - xform/k(\S+[4569,])/K$1/
    - xform/c(\S+[4569,])/C$1/
    - xform/h(\S+[4569,])/X$1/
    - xform/SR(\S+[4569,])/RD$1/ #fw
    - xform/s(\S+[4569,])/Z$1/
    - xform/b(\S+[4569,])/P$1/
    - xform/d(\S+[4569,])/T$1/
    - xform/Rd(\S+[4569,])/RT$1/ #fw
    - xform/g(\S+[4569,])/K$1/
    - xform/z(\S+[4569,])/C$1/
    - xform/p([0-9,])/M$1/
    - xform/t([0-9,])/N$1/
    - xform/k([0-9,])/g$1/
    - xform/h([0-9,])/A$1/
    - derive/M([0-9,])/p$1/
    - derive/N([0-9,])/t$1/
    - derive/g([0-9,])/k$1/
    - derive/A([0-9,])/h$1/
    - xform/aa(\S*[0-9,])/q$1/
    - xform/a([0-9,])/A$1/
    - xform/([Aaqe<Œµ>iIuUyYoOEW])u([0-9,])/$1w$2/
    - xform/([Aaqe<Œµ>iIuUyYoOEW])i([0-9,])/$1j$2/
    - xform/(^|\s)([Aaqe<Œµ>iIuUyYoOEW]\S*[0-9,])/$1Q$2/
    #- xform/(^|\s)([nmlvJrw]\S+)2$/$1<‡πï>/ #hz
    #- xform/<‡πï>/5/ #regex rime
    - xform/(^|\s)([nmlvJrw<…¨>]\S+[123])/$1h$2/
    - xform/(^|\s)(j\S+[123])/$1Q$2/
    - xform/<…¨>(\S*[0-9,])/SL$1/ #hz
    - xform/am([0-9,])/V$1/
    - xform/aj(\S*[0-9])/E$1/
    - xform/i(\S*[0-9,])/I$1/
    - xform/I([vgk][0-9,])/<…™>$1/ #variant preparation for ik
    #- xform/<…™>(\S*[0-9,])/i$1/ #variant: ik as ‚Äì‡∏¥
    - derive/<…™>(\S*[0-9,])/i$1/ #derive variant
    - xform/<…™>(\S*[0-9,])/eG$1/ #variant: ik as ‡πÄ‚Äì‡πá
    - xform/<Œµ>(\S*[0-9,])/ae$1/ #variant: e as ‡πÅ‚Äì
    - xform/u(\S*[0-9,])/U$1/
    - xform/U([vgk][0-9,])/< ä>$1/ #variant preparation for uk
    #- xform/U([vgk][0-9,])/u$1/ #variant: uk as ‚Äì‡∏∏
    - derive/< ä>(\S*[0-9,])/u$1/ #derive variant
    - xform/< ä>(\S*[0-9,])/OG$1/ #variant: uk as ‡πÇ‚Äì‡∏∞
    - xform/y(\S*[0-9,])/Yo$1/
    - xform/OG([0-9,])/OA$1/ #thai combi ‡πÇ‚Äì‡∏∞
    - derive/OG(\S+[0-9,])/$1/ #thai combi erase ‡πÇ‚Äì‡∏∞
    - derive/Yo(\S*[0-9,])/Y$1/ #fw variant, e.g. Yn->Yon
    - derive/eq/aw/
    - derive/eo/oe/
    - derive/ei/eo/
    - derive/ei/oe/
    - derive/E/aj/
    - fuzz/^(\S+)[0-9,]$/$1/      # ÊãºÁ∞°ËÅ≤Ë™ø
    - derive/^([gkK]w).+$/$1/      # ËÅ≤ÊØç
    - derive/^(R[dtTD]).+$/$1/      # ËÅ≤ÊØç
    - derive/^([a-zA-Z]).+[0-9,]$/$1/      # ÊãºÁ∞°Â≠óÈ¶ñ
    #- abbrev/^([a-z]).+[0-9,]$/$1/      # ÊãºÁ∞°Â≠óÈ¶ñ
    - "xform/0/L/"
    - "xform/1//"
    - "xform/,/10/"
    - "xform/2/R/"
    - "xform/3/S/"
    - "xform/4//"
    - "xform/5/R/"
    - "xform/6/S/"
    - "xform/7//"
    - "xform/8/S/"
    - "xform/9//"
    - "xform/10/S/"

translator:
  dictionary: thai_jyutping
  spelling_hints: 5
  preedit_format:
    - "xform QK ‡πö"
    - "xform qk ‡πö"
    - "xform dnK ‚îº"
    - "xform dnk ‚îº"
    - "xform jmg ‡πé"
    - "xform lYY ‡∏Ø‡∏•‡∏Ø"
    - "xform lyy ‡∏Ø‡∏•‡∏Ø"
    - "xform PT ‡∏∫"
    - "xform Km ‡πõ"
    - "xform km ‡πõ"
    - "xform Mj ‡∏Ø"
    - "xform TK ‡πå"
    - "xform nh ‡πç"
    - "xform Fm ‡πè"
    - "xform fm ‡πè"
    - "xform dg ‡πè"
    - "xform jm ‡πÜ"
    - "xform RRN ‡∏é"
    - "xform Rd ‡∏è"
    - "xform Rt ‡∏ê"
    - "xform RT ‡∏ë"
    - "xform RD ‡∏í"
    - "xform RRn ‡∏ì"
    - "xform SJ ‡∏®"
    - "xform SR ‡∏©"
    - "xform SL ‡∏¨"
    - "xform Ry ‡∏§"
    - "xform Ly ‡∏¶"
    - "xform RY ‡∏§‡πÖ"
    - "xform LY ‡∏¶‡πÖ"
    - "xform OY ‡πÖ"
    - "xform KH ‡∏Ü"
    - "xform CH ‡∏å"
    - "xform TH ‡∏ò"
    - "xform PH ‡∏†"
    - "xform ae ‡πÅ"
    - "xform q ‡∏≤"
    - "xform Q ‡∏≠"
    - "xform w ‡∏ß"
    - "xform W ‡πÉ"
    - "xform e ‡πÄ"
    - "xform E ‡πÑ"
    - "xform r ‡∏£"
    - "xform R ‡πâ"
    - "xform t ‡∏ñ"
    - "xform T ‡∏ó"
    - "xform y ‡∏∂"
    - "xform Y ‡∏∑"
    - "xform u ‡∏∏"
    - "xform U ‡∏π"
    - "xform i ‡∏¥"
    - "xform I ‡∏µ"
    - "xform o ‡∏≠"
    - "xform O ‡πÇ"
    - "xform p ‡∏ú"
    - "xform P ‡∏û"
    - "xform a ‡∏±"
    - "xform A ‡∏∞"
    - "xform s ‡∏™"
    - "xform S ‡πà"
    - "xform d ‡∏ï"
    - "xform D ‡πä"
    - "xform f ‡∏ù"
    - "xform F ‡∏ü"
    - "xform g ‡∏Å"
    - "xform G ‡πá"
    - "xform h ‡∏´"
    - "xform H ‡∏Æ"
    - "xform j ‡∏¢"
    - "xform J ‡∏ç"
    - "xform k ‡∏Ç"
    - "xform K ‡∏Ñ"
    - "xform l ‡∏•"
    - "xform L ‡πã"
    - "xform z ‡∏à"
    - "xform Z ‡∏ã"
    - "xform x ‡∏É"
    - "xform X ‡∏Ö"
    - "xform c ‡∏â"
    - "xform C ‡∏ä"
    - "xform v ‡∏á"
    - "xform V ‡∏≥"
    - "xform b ‡∏õ"
    - "xform B ‚Äì"
    - "xform n ‡∏ô"
    - "xform N ‡∏î"
    - "xform m ‡∏°"
    - "xform M ‡∏ö"
    - xform/ //
#    - "xform (^.+)([‡πÑ|‡πÉ|‡πÇ|‡πÅ|‡πÄ]) $2$1"
  comment_format:
    - xform/([ptkh])(10)/$1,/
    - "xform/([0-9,])h/$1/"
    - xform/v(\S*[0-9,])/w$1/ #gs
    - xform/bb(\S*[0-9,])/M$1/ #gs
    - xform/dd(\S*[0-9,])/N$1/ #gs
    - xform/oo(\S*[0-9,])/O$1/ #gs
    - xform/ee(\S*[0-9,])/e$1/ #gs
    - xform/yu(\S*[0-9,])/y$1/ #fw
    - xform/o([mp])(\S*[0-9,])/OG$1$2/ #fw, <…µ> (as in Jing'waa) or OG (short, *o)
    - xform/ou(\S*[0-9,])/O$1/ #fw, <…µ> (as in Jing'waa) or <…µ>u or O (long, *…íw)
    - xform/eo(\S*[0-9,])/<…µ>$1/ #fw, < ä> (as in Jing'waa) or <…µ>
    - xform/oe(\S*[0-9,])/<≈ì>$1/ #fw
    - xform/e(\S*[0-9,])/<…õ>$1/ #fw
    - xform/<…µ>(\S*[0-9,])/eo$1/ #fw
    - xform/<≈ì>(\S*[0-9,])/oe$1/ #fw
    - xform/([zcs])i([0-9,])/$1<…Ø>$2/ #fw
    - xform/zh(\S+[0-9,])/Rd$1/ #fw
    - xform/ch(\S+[0-9,])/Rt$1/ #fw
    - xform/sh(\S+[0-9,])/SR$1/ #fw
    - xform/nj(\S*[0-9,])/J$1/
    - xform/ng(\S*[0-9,])/v$1/
    #- xform/(b\S+)4/$1<‡πñ>/ #hz
    #- xform/(d\S+)4/$1<‡πñ>/ #hz
    #- xform/(g\S+)4/$1<‡πñ>/ #hz
    #- xform/(z\S+)4/$1<‡πñ>/ #hz
    #- xform/<‡πñ>/6/ #regex rime
    - xform/sl(\S+[0-9,])/<…¨>$1/ #hz
    - xform/p(\S+[4569,])/P$1/
    - xform/f(\S+[4569,])/F$1/
    - xform/t(\S+[4569,])/T$1/
    - xform/k(\S+[4569,])/K$1/
    - xform/c(\S+[4569,])/C$1/
    - xform/h(\S+[4569,])/X$1/
    - xform/SR(\S+[4569,])/RD$1/ #fw
    - xform/s(\S+[4569,])/Z$1/
    - xform/b(\S+[4569,])/P$1/
    - xform/d(\S+[4569,])/T$1/
    - xform/g(\S+[4569,])/K$1/
    - xform/z(\S+[4569,])/C$1/
    - xform/p([0-9,])/M$1/
    - xform/t([0-9,])/N$1/
    - xform/k([0-9,])/g$1/
    - xform/h([0-9,])/A$1/
    - xform/aa(\S*[0-9,])/q$1/
    - xform/a([0-9,])/A$1/
    - xform/([Aaqe<…õ>iIuUyYoOEW])u([0-9,])/$1w$2/
    - xform/([Aaqe<…õ>iIuUyYoOEW])i([0-9,])/$1j$2/
    - xform/(^|\s)([Aaqe<…õ>iIuUyYoOEW]\S*[0-9,])/$1Q$2/
    #- xform/(^|\s)([nmlvJrw]\S+)2/$1<‡πï>/ #hz
    #- xform/<‡πï>/5/ #regex rime
    - xform/sl(\S+[0-9,])/<…¨>$1/ #hz
    - xform/(^|\s)([nmlvJrw<…¨>]\S+[123])/$1h$2/
    - xform/(^|\s)(j\S+[123])/$1Q$2/
    - xform/<…¨>(\S*[0-9,])/SL$1/ #hz
    - xform/am([0-9,])/V$1/
    - xform/aj(\S*[0-9])/E$1/
    - xform/i(\S*[0-9,])/I$1/
    - xform/I([vgk][0-9,])/<…™>$1/ #variant preparation for ik
    #- xform/<…™>(\S*[0-9,])/i$1/ #variant: ik as ‚Äì‡∏¥
    - xform/<…™>(\S*[0-9,])/eG$1/ #variant: ik as ‡πÄ‚Äì‡πá
    - xform/u(\S*[0-9,])/U$1/
    - xform/U([vgk][0-9,])/< ä>$1/ #variant preparation for uk
    #- xform/< ä>(\S*[0-9,])/u$1/ #variant: uk as ‚Äì‡∏∏
    - xform/< ä>(\S*[0-9,])/OG$1/ #variant: uk as ‡πÇ‚Äì‡∏∞
    - xform/y(\S*[0-9,])/Y$1/ #dif from speller
    - xform/Y([0-9,])/Yo$1/ #thai combi
    - xform/<…Ø>([0-9,])/Y$1/ #fw
    - xform/(^|\s)([mnv])([0-9,])/$1$2‡∏∫$3/ #comment_format
    #- xform/([^aqe<…õ>iIuUyYoOEWjwG][mnv])([0-9,])/$1‡∏∫$2/ #comment_format
    - xform/OG([0-9,])/OA$1/ #thai combi ‡πÇ‚Äì‡∏∞
    - xform/OG(\S+[0-9,])/$1/ #thai combi erase ‡πÇ‚Äì‡∏∞
    - xform/h(<…õ>|e|O|E|W)([nmlvJrw][0-9,])/h‡∏∫$1$2/ #comment_format
    - xform/eo(\S*[0-9,])/ei$1/ #thai combi
    - xform/aw([0-9,])/eq$1/ #thai combi
    #- xform/ow([0-9,])/O$1/ #thai combi
    - xform/oe([0-9,])/Yeo$1/ #thai combi, special shifting
    - xform/oe(\S+[0-9,])/Yeo$1/ #thai combi, special shifting
    - xform/oA([0-9,])/eqA$1/ #thai combi
    - xform/([lwr]?[ae<…õ>iuyOEW]?)([oqj]?[mnvVMNgAjw]?)([0-9,])/$1$3$2/ #thai order 
    - xform/(\S+)(<…õ>|e|O|E|W)(\S*[0-9,])/$2$1$3/ #thai order pawRCI 
    - xform/<…õ>(\S*[0-9,])/ae$1/ #thai <…õ>; variant: e as ‡πÅ‚Äì
    - "xform/0/L/"
    - "xform/1//"
    - "xform/,/10/"
    - "xform/2/R/"
    - "xform/3/S/"
    - "xform/4//"
    - "xform/5/R/"
    - "xform/6/S/"
    - "xform/7//"
    - "xform/8/S/"
    - "xform/9//"
    - "xform/10/S/"
    - "xform QK ‡πö"
    - "xform qk ‡πö"
    - "xform dnK ‚îº"
    - "xform dnk ‚îº"
    - "xform jmg ‡πé"
    - "xform lYY ‡∏Ø‡∏•‡∏Ø"
    - "xform lyy ‡∏Ø‡∏•‡∏Ø"
    - "xform PT ‡∏∫"
    - "xform Km ‡πõ"
    - "xform km ‡πõ"
    - "xform Mj ‡∏Ø"
    - "xform TK ‡πå"
    - "xform nh ‡πç"
    - "xform Fm ‡πè"
    - "xform fm ‡πè"
    - "xform dg ‡πè"
    - "xform jm ‡πÜ"
    - "xform RRN ‡∏é"
    - "xform Rd ‡∏è"
    - "xform Rt ‡∏ê"
    - "xform RT ‡∏ë"
    - "xform RD ‡∏í"
    - "xform RRn ‡∏ì"
    - "xform SJ ‡∏®"
    - "xform SR ‡∏©"
    - "xform SL ‡∏¨"
    - "xform Ry ‡∏§"
    - "xform Ly ‡∏¶"
    - "xform RY ‡∏§‡πÖ"
    - "xform LY ‡∏¶‡πÖ"
    - "xform OY ‡πÖ"
    - "xform KH ‡∏Ü"
    - "xform CH ‡∏å"
    - "xform TH ‡∏ò"
    - "xform PH ‡∏†"
    - "xform ae ‡πÅ"
    - "xform q ‡∏≤"
    - "xform Q ‡∏≠"
    - "xform w ‡∏ß"
    - "xform W ‡πÉ"
    - "xform e ‡πÄ"
    - "xform E ‡πÑ"
    - "xform r ‡∏£"
    - "xform R ‡πâ"
    - "xform t ‡∏ñ"
    - "xform T ‡∏ó"
    - "xform y ‡∏∂"
    - "xform Y ‡∏∑"
    - "xform u ‡∏∏"
    - "xform U ‡∏π"
    - "xform i ‡∏¥"
    - "xform I ‡∏µ"
    - "xform o ‡∏≠"
    - "xform O ‡πÇ"
    - "xform p ‡∏ú"
    - "xform P ‡∏û"
    - "xform a ‡∏±"
    - "xform A ‡∏∞"
    - "xform s ‡∏™"
    - "xform S ‡πà"
    - "xform d ‡∏ï"
    - "xform D ‡πä"
    - "xform f ‡∏ù"
    - "xform F ‡∏ü"
    - "xform g ‡∏Å"
    - "xform G ‡πá"
    - "xform h ‡∏´"
    - "xform H ‡∏Æ"
    - "xform j ‡∏¢"
    - "xform J ‡∏ç"
    - "xform k ‡∏Ç"
    - "xform K ‡∏Ñ"
    - "xform l ‡∏•"
    - "xform L ‡πã"
    - "xform z ‡∏à"
    - "xform Z ‡∏ã"
    - "xform x ‡∏É"
    - "xform X ‡∏Ö"
    - "xform c ‡∏â"
    - "xform C ‡∏ä"
    - "xform v ‡∏á"
    - "xform V ‡∏≥"
    - "xform b ‡∏õ"
    - "xform B ‚Äì"
    - "xform n ‡∏ô"
    - "xform N ‡∏î"
    - "xform m ‡∏°"
    - "xform M ‡∏ö"
    - xform/ //



zh_hk:
  option_name: zh_hk
  opencc_config: t2hk.json

#EmojiÊª§ÈïúÈÖçÁΩÆ
emoji_cn:
  opencc_config: emoji.json       #EmojiËØçÂÖ∏ÈÖçÁΩÆÊñá‰ª∂
  option_name: emoji_cn           #‰∏éÁä∂ÊÄÅÊ†èÂºÄÂÖ≥ÁöÑÂêçÁß∞‰∏ÄËá¥
  tips: all                       #ÂºÄÂêØÊ≥®Èáä

reverse_lookup:
  dictionary: luna_pinyin
  prefix: "`"
  suffix: "'"
  tips: „ÄîÊãºÈü≥„Äï
  preedit_format:
    - xform/([nl])v/$1√º/
    - xform/([nl])ue/$1√ºe/
    - xform/([jqxy])v/$1u/
  comment_format:
    - xform/([ptkh])(10)/$1,/
    - "xform/([0-9,])h/$1/"
    - xform/v(\S*[0-9,])/w$1/ #gs
    - xform/bb(\S*[0-9,])/M$1/ #gs
    - xform/dd(\S*[0-9,])/N$1/ #gs
    - xform/oo(\S*[0-9,])/O$1/ #gs
    - xform/ee(\S*[0-9,])/e$1/ #gs
    - xform/yu(\S*[0-9,])/y$1/ #fw
    - xform/o([mp])(\S*[0-9,])/OG$1$2/ #fw, <…µ> (as in Jing'waa) or OG (short, *o)
    - xform/ou(\S*[0-9,])/O$1/ #fw, <…µ> (as in Jing'waa) or <…µ>u or O (long, *…íw)
    - xform/eo(\S*[0-9,])/<…µ>$1/ #fw, < ä> (as in Jing'waa) or <…µ>
    - xform/oe(\S*[0-9,])/<≈ì>$1/ #fw
    - xform/e(\S*[0-9,])/<…õ>$1/ #fw
    - xform/<…µ>(\S*[0-9,])/eo$1/ #fw
    - xform/<≈ì>(\S*[0-9,])/oe$1/ #fw
    - xform/([zcs])i([0-9,])/$1<…Ø>$2/ #fw
    - xform/zh(\S+[0-9,])/Rd$1/ #fw
    - xform/ch(\S+[0-9,])/Rt$1/ #fw
    - xform/sh(\S+[0-9,])/SR$1/ #fw
    - xform/nj(\S*[0-9,])/J$1/
    - xform/ng(\S*[0-9,])/v$1/
    #- xform/(b\S+)4/$1<‡πñ>/ #hz
    #- xform/(d\S+)4/$1<‡πñ>/ #hz
    #- xform/(g\S+)4/$1<‡πñ>/ #hz
    #- xform/(z\S+)4/$1<‡πñ>/ #hz
    #- xform/<‡πñ>/6/ #regex rime
    - xform/sl(\S+[0-9,])/<…¨>$1/ #hz
    - xform/p(\S+[4569,])/P$1/
    - xform/f(\S+[4569,])/F$1/
    - xform/t(\S+[4569,])/T$1/
    - xform/k(\S+[4569,])/K$1/
    - xform/c(\S+[4569,])/C$1/
    - xform/h(\S+[4569,])/X$1/
    - xform/SR(\S+[4569,])/RD$1/ #fw
    - xform/s(\S+[4569,])/Z$1/
    - xform/b(\S+[4569,])/P$1/
    - xform/d(\S+[4569,])/T$1/
    - xform/g(\S+[4569,])/K$1/
    - xform/z(\S+[4569,])/C$1/
    - xform/p([0-9,])/M$1/
    - xform/t([0-9,])/N$1/
    - xform/k([0-9,])/g$1/
    - xform/h([0-9,])/A$1/
    - xform/aa(\S*[0-9,])/q$1/
    - xform/a([0-9,])/A$1/
    - xform/([Aaqe<…õ>iIuUyYoOEW])u([0-9,])/$1w$2/
    - xform/([Aaqe<…õ>iIuUyYoOEW])i([0-9,])/$1j$2/
    - xform/(^|\s)([Aaqe<…õ>iIuUyYoOEW]\S*[0-9,])/$1Q$2/
    #- xform/(^|\s)([nmlvJrw]\S+)2/$1<‡πï>/ #hz
    #- xform/<‡πï>/5/ #regex rime
    - xform/sl(\S+[0-9,])/<…¨>$1/ #hz
    - xform/(^|\s)([nmlvJrw<…¨>]\S+[123])/$1h$2/
    - xform/(^|\s)(j\S+[123])/$1Q$2/
    - xform/<…¨>(\S*[0-9,])/SL$1/ #hz
    - xform/am([0-9,])/V$1/
    - xform/aj(\S*[0-9])/E$1/
    - xform/i(\S*[0-9,])/I$1/
    - xform/I([vgk][0-9,])/<…™>$1/ #variant preparation for ik
    #- xform/<…™>(\S*[0-9,])/i$1/ #variant: ik as ‚Äì‡∏¥
    - xform/<…™>(\S*[0-9,])/eG$1/ #variant: ik as ‡πÄ‚Äì‡πá
    - xform/u(\S*[0-9,])/U$1/
    - xform/U([vgk][0-9,])/< ä>$1/ #variant preparation for uk
    #- xform/< ä>(\S*[0-9,])/u$1/ #variant: uk as ‚Äì‡∏∏
    - xform/< ä>(\S*[0-9,])/OG$1/ #variant: uk as ‡πÇ‚Äì‡∏∞
    - xform/y(\S*[0-9,])/Y$1/ #dif from speller
    - xform/Y([0-9,])/Yo$1/ #thai combi
    - xform/<…Ø>([0-9,])/Y$1/ #fw
    - xform/(^|\s)([mnv])([0-9,])/$1$2‡∏∫$3/ #comment_format
    #- xform/([^aqe<…õ>iIuUyYoOEWjwG][mnv])([0-9,])/$1‡∏∫$2/ #comment_format
    - xform/OG([0-9,])/OA$1/ #thai combi ‡πÇ‚Äì‡∏∞
    - xform/OG(\S+[0-9,])/$1/ #thai combi erase ‡πÇ‚Äì‡∏∞
    - xform/h(<…õ>|e|O|E|W)([nmlvJrw][0-9,])/h‡∏∫$1$2/ #comment_format
    - xform/eo(\S*[0-9,])/ei$1/ #thai combi
    - xform/aw([0-9,])/eq$1/ #thai combi
    #- xform/ow([0-9,])/O$1/ #thai combi
    - xform/oe([0-9,])/Yeo$1/ #thai combi, special shifting
    - xform/oe(\S+[0-9,])/Yeo$1/ #thai combi, special shifting
    - xform/oA([0-9,])/eqA$1/ #thai combi
    - xform/([lwr]?[ae<…õ>iuyOEW]?)([oqj]?[mnvVMNgAjw]?)([0-9,])/$1$3$2/ #thai order 
    - xform/(\S+)(<…õ>|e|O|E|W)(\S*[0-9,])/$2$1$3/ #thai order pawRCI 
    - xform/<…õ>(\S*[0-9,])/ae$1/ #thai <…õ>; variant: e as ‡πÅ‚Äì
    - "xform/0/L/"
    - "xform/1//"
    - "xform/,/10/"
    - "xform/2/R/"
    - "xform/3/S/"
    - "xform/4//"
    - "xform/5/R/"
    - "xform/6/S/"
    - "xform/7//"
    - "xform/8/S/"
    - "xform/9//"
    - "xform/10/S/"
    - "xform QK ‡πö"
    - "xform qk ‡πö"
    - "xform dnK ‚îº"
    - "xform dnk ‚îº"
    - "xform jmg ‡πé"
    - "xform lYY ‡∏Ø‡∏•‡∏Ø"
    - "xform lyy ‡∏Ø‡∏•‡∏Ø"
    - "xform PT ‡∏∫"
    - "xform Km ‡πõ"
    - "xform km ‡πõ"
    - "xform Mj ‡∏Ø"
    - "xform TK ‡πå"
    - "xform nh ‡πç"
    - "xform Fm ‡πè"
    - "xform fm ‡πè"
    - "xform dg ‡πè"
    - "xform jm ‡πÜ"
    - "xform RRN ‡∏é"
    - "xform Rd ‡∏è"
    - "xform Rt ‡∏ê"
    - "xform RT ‡∏ë"
    - "xform RD ‡∏í"
    - "xform RRn ‡∏ì"
    - "xform SJ ‡∏®"
    - "xform SR ‡∏©"
    - "xform SL ‡∏¨"
    - "xform Ry ‡∏§"
    - "xform Ly ‡∏¶"
    - "xform RY ‡∏§‡πÖ"
    - "xform LY ‡∏¶‡πÖ"
    - "xform OY ‡πÖ"
    - "xform KH ‡∏Ü"
    - "xform CH ‡∏å"
    - "xform TH ‡∏ò"
    - "xform PH ‡∏†"
    - "xform ae ‡πÅ"
    - "xform q ‡∏≤"
    - "xform Q ‡∏≠"
    - "xform w ‡∏ß"
    - "xform W ‡πÉ"
    - "xform e ‡πÄ"
    - "xform E ‡πÑ"
    - "xform r ‡∏£"
    - "xform R ‡πâ"
    - "xform t ‡∏ñ"
    - "xform T ‡∏ó"
    - "xform y ‡∏∂"
    - "xform Y ‡∏∑"
    - "xform u ‡∏∏"
    - "xform U ‡∏π"
    - "xform i ‡∏¥"
    - "xform I ‡∏µ"
    - "xform o ‡∏≠"
    - "xform O ‡πÇ"
    - "xform p ‡∏ú"
    - "xform P ‡∏û"
    - "xform a ‡∏±"
    - "xform A ‡∏∞"
    - "xform s ‡∏™"
    - "xform S ‡πà"
    - "xform d ‡∏ï"
    - "xform D ‡πä"
    - "xform f ‡∏ù"
    - "xform F ‡∏ü"
    - "xform g ‡∏Å"
    - "xform G ‡πá"
    - "xform h ‡∏´"
    - "xform H ‡∏Æ"
    - "xform j ‡∏¢"
    - "xform J ‡∏ç"
    - "xform k ‡∏Ç"
    - "xform K ‡∏Ñ"
    - "xform l ‡∏•"
    - "xform L ‡πã"
    - "xform z ‡∏à"
    - "xform Z ‡∏ã"
    - "xform x ‡∏É"
    - "xform X ‡∏Ö"
    - "xform c ‡∏â"
    - "xform C ‡∏ä"
    - "xform v ‡∏á"
    - "xform V ‡∏≥"
    - "xform b ‡∏õ"
    - "xform B ‚Äì"
    - "xform n ‡∏ô"
    - "xform N ‡∏î"
    - "xform m ‡∏°"
    - "xform M ‡∏ö"
    #- xform/ /,/

punctuator:
  import_preset: default
    
key_binder:
  import_preset: default
  bindings: 
  - { when: has_menu, accept: asterisk, send: Shift+Return }
  - { when: has_menu, accept: '/', send: Control+Shift+Return}
  - { when: has_menu, accept: "#", toggle: emoji_cn }
  - { when: paging, accept: bracketleft, send: Page_Up }
  - { when: has_menu, accept: bracketright, send: Page_Down }

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "`[a-z]*'?$"
    punct: '^/([0-9]0?|[a-z]+)$'